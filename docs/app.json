[{"name":"app.R","content":"# Load packages ----------------------------------------------------------------\r\n\r\nlibrary(shiny)\r\nlibrary(tidyverse)\r\nlibrary(gridExtra)\r\n\r\n# Membuat UI ----\r\n\r\nui <- fluidPage(\r\n  # Judul ----\r\n  titlePanel(\"Teorema Limit Pusat untuk Rerata\", windowTitle = \"TLP untuk Rerata\"),\r\n  \r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      wellPanel(\r\n        # Memilih distribusi ----\r\n        radioButtons(\"dist\", \"Distribusi populasi:\",\r\n                     c(\"Normal\" = \"rnorm\",\r\n                       \"Seragam\" = \"runif\",\r\n                       \"Condong ke kanan\" = \"rlnorm\",\r\n                       \"Condong ke kiri\" = \"rbeta\"),\r\n                     selected = \"rnorm\"),\r\n        hr(),\r\n        \r\n        # Parameter distribusi ----\r\n        uiOutput(\"mu\"),\r\n        uiOutput(\"sd\"),\r\n        uiOutput(\"minmax\"),\r\n        uiOutput(\"skew\"),\r\n        \r\n        # Memilih ukuran sampel ----\r\n        sliderInput(\"n\",\r\n                    \"Ukuran sampel:\", \r\n                    value = 30,\r\n                    min = 2,\r\n                    max = 500),\r\n        br(),\r\n        \r\n        # Banyak sampel ----\r\n        sliderInput(\"k\",\r\n                    \"Banyaknya sampel:\",\r\n                    value = 200,\r\n                    min = 10,\r\n                    max = 1000)\r\n      ),\r\n      \r\n      # Teks informasi ---- \r\n      helpText(a(href=\"https://github.com/ydkristanto/apl-tlp-rerata\", target=\"_blank\", \"Lihat kode sumber\"))\r\n      \r\n    ),\r\n    \r\n    mainPanel(\r\n      tabsetPanel(\r\n        type = \"tabs\",\r\n        # Tab pertama ----\r\n        tabPanel(\r\n          title = \"Distribusi Populasi\",\r\n          # Plot populasi ----\r\n          plotOutput(\"pop.dist\", height = \"500px\"),\r\n          br()\r\n        ),\r\n        # Tab kedua ----\r\n        tabPanel(\r\n          title = \"Beberapa Sampel\",\r\n          # Plot-plot sampel ----\r\n          br(),\r\n          plotOutput(\"sample.dist\", height = \"600px\"),\r\n          #  Teks banyaknya sampel ----\r\n          div(h3(textOutput(\"num.samples\")), align = \"center\"),\r\n          br()\r\n        ),\r\n        # Tab ketiga ----\r\n        tabPanel(\r\n          title = \"Distribusi Sampling\",\r\n          \r\n          fluidRow(\r\n            column(width = 12,\r\n                   br(),\r\n                   # Plot sampling ----\r\n                   plotOutput(\"sampling.dist\"),\r\n                   # Deskripsi sampling ----\r\n                   div(textOutput(\"sampling.descr\", inline = TRUE),\r\n                       align = \"center\"))\r\n          ),\r\n          \r\n          fluidRow(\r\n            column(width = 7,\r\n                   br(), br(),\r\n                   # Deskripsi TLP ----\r\n                   div(textOutput(\"CLT.descr\"),\r\n                       align = \"justify\")),\r\n            column(width = 5,\r\n                   br(),\r\n                   # Plot populasi ----\r\n                   plotOutput(\"pop.dist.two\",\r\n                              width = \"85%\", height = \"200px\"))\r\n          )\r\n          \r\n        ),\r\n        \r\n        tabPanel(\r\n          title = \"Informasi\",\r\n          # Informasi aplikasi ----\r\n          h2(\"Informasi Aplikasi\"),\r\n          div(p(\"Aplikasi Shiny ini bertujuan untuk mendeskripsikan Teorema\r\n          Limit Pusat untuk rerata. Berdasarkan teorema ini, ketika\r\n          ukuran sampelnya besar, distribusi sampling reratanya mendekati\r\n          normal dengan rerata yang sama dengan rerata populasinya dan \r\n          simpangan baku yang sama dengan simpangan baku populasi dibagi \r\n          dengan akar kuadrat dari ukuran sampel tersebut. Hal ini juga \r\n          berlaku ketika ukuran sampelnya kecil tetapi populasinya \r\n          berdistribusi normal. Akan tetapi, teorema ini tidak menjamin \r\n                kenormalam distribusi samplingnya ketika ukuran sampelnya \r\n                kecil dan populasi tidak berdistribusi normal.\"),\r\n              align = \"justify\"),\r\n          div(p(\"Aplikasi ini merupakan bentuk modifikasi (atau \r\n          lebih tepatnya terjemahan) dari\",\r\n                a(\"aplikasi serupa\", href = \r\n          \"https://openintro.shinyapps.io/CLT_mean/\", target = \"_blank\"),\r\n          \"yang dikembangkan oleh Mine Ã‡etinkaya-Rundel. \r\n          Pengembang aplikasi ini adalah\",\r\n          a(\"Yosep Dwi Kristanto,\", href = \"https://people.usd.ac.id/~ydkristanto/\", target = \"_blank\"),\r\n          \"seorang \r\n          dosen dan peneliti di program studi \", a(\"Pendidikan Matematika,\", href = \"https://usd.ac.id/s1pmat\", target = \"_blank\"), a(\"Universitas Sanata Dharma,\", href = \"https://www.usd.ac.id/\", target = \"_blank\"), \"Yogyakarta.\"), align = \"justify\"),\r\n          hr()\r\n        )\r\n        \r\n      )\r\n    )\r\n  )\r\n)\r\n\r\n# Mendefinisikan fungsi peladen ----\r\n\r\nseed <- as.numeric(Sys.time())\r\n\r\nserver <- function(input, output, session) {\r\n  \r\n  # Slider rerata untuk distribusi normal ----\r\n  output$mu = renderUI(\r\n    {\r\n      if (input$dist == \"rnorm\")\r\n      {\r\n        sliderInput(\"mu\",\r\n                    \"Rerata:\",\r\n                    value = 0,\r\n                    min = -40,\r\n                    max = 50)\r\n      }\r\n    })\r\n  \r\n  # Slider simpangan baku untuk distribusi normal ----\r\n  output$sd = renderUI(\r\n    {\r\n      if (input$dist == \"rnorm\")\r\n      {\r\n        sliderInput(\"sd\",\r\n                    \"Simpangan baku:\",\r\n                    value = 20,\r\n                    min = 1,\r\n                    max = 30)\r\n      }\r\n    })\r\n  \r\n  # Slider minmaks untuk distribusi seragam ----\r\n  output$minmax = renderUI(\r\n    {\r\n      \r\n      if (input$dist == \"runif\")\r\n      {\r\n        sliderInput(\"minmax\",\r\n                    \"Batas bawah dan batas atas\",\r\n                    value = c(5, 15),\r\n                    min = 0,\r\n                    max = 20)\r\n      }\r\n    })\r\n  \r\n  # Memastikan jangkauan untuk distribusi seragam != 0 ----\r\n  observeEvent(input$minmax, {\r\n    \r\n    req(input$minmax)\r\n    \r\n    if (input$minmax[1] == input$minmax[2]){\r\n      if (input$minmax[1] == 0){\r\n        updateSliderInput(session, \"minmax\", value = c(0, 1))\r\n      } else if (input$minmax[2] == 20){\r\n        updateSliderInput(session, \"minmax\", value = c(19, 20))\r\n      } else {\r\n        updateSliderInput(session, \"minmax\", value = c(input$minmax[2], input$minmax[2] + 1))\r\n      }\r\n    }\r\n  })\r\n  \r\n  # Slider kecondongan untuk rlnorm dan rbeta ----\r\n  output$skew = renderUI(\r\n    {\r\n      \r\n      if (input$dist == \"rlnorm\" | input$dist == \"rbeta\"){\r\n        selectInput(inputId = \"skew\",\r\n                    label = \"Kecondongan:\",\r\n                    choices = c(\"Rendah\" = \"low\",\r\n                                \"Sedang\" = \"med\",\r\n                                \"Tinggi\" = \"high\"),\r\n                    selected = \"low\")\r\n      }\r\n    })\r\n  \r\n  # Membuat sampel-sampel random ----\r\n  rand_draw <- function(dist, n, mu, sd, min, max, skew){\r\n    \r\n    vals = NULL\r\n    \r\n    if (dist == \"rbeta\"){\r\n      req(skew)\r\n      if (skew == \"low\"){\r\n        vals = do.call(dist, list(n = n, shape1 = 5, shape2 = 2))\r\n      }\r\n      else if (skew == \"med\"){\r\n        vals = do.call(dist, list(n = n, shape1 = 5, shape2 = 1.5))\r\n      }\r\n      else if (skew == \"high\"){\r\n        vals = do.call(dist, list(n = n, shape1 = 5, shape2 = 1)) \r\n      }\r\n    }\r\n    \r\n    else if (dist == \"rnorm\"){\r\n      req(mu, sd)\r\n      vals = do.call(dist, list(n = n, mean = mu, sd = sd))\r\n    }\r\n    \r\n    else if (dist == \"rlnorm\"){\r\n      req(skew)\r\n      if (skew == \"low\"){\r\n        vals = do.call(dist, list(n = n, meanlog = 0, sdlog = .25))\r\n      }\r\n      else if (skew == \"med\"){\r\n        vals = do.call(dist, list(n = n, meanlog = 0, sdlog =.5))\r\n      }\r\n      else if (skew == \"high\"){\r\n        vals = do.call(dist, list(n = n, meanlog = 0, sdlog = 1))\r\n      }\r\n    }\r\n    \r\n    else if (dist == \"runif\"){\r\n      req(min, max)\r\n      vals = do.call(dist, list( n = n, min = min, max = max))\r\n    }\r\n    return(vals)\r\n  }\r\n  \r\n  rep_rand_draw = repeatable(rand_draw)\r\n  \r\n  # Mendefinisikan beberapa variabel reaktif lainnya ----\r\n  parent = reactive({\r\n    \r\n    n_sample = 1e5\r\n    \r\n    return(rep_rand_draw(input$dist, n_sample, input$mu, input$sd,\r\n                         input$minmax[1], input$minmax[2], input$skew))\r\n  })\r\n  \r\n  samples = reactive({\r\n    \r\n    pop = parent()\r\n    n = input$n\r\n    k = input$k\r\n    \r\n    return(replicate(k, sample(pop, n, replace=TRUE)))\r\n  })\r\n  \r\n  u_min = reactive({\r\n    req(input$minmax)\r\n    return(input$minmax[1])\r\n  })\r\n  \r\n  u_max = reactive({\r\n    req(input$minmax)\r\n    return(input$minmax[2])\r\n  })\r\n  \r\n  # plot 1 a) ----\r\n  output$pop.dist = renderPlot({\r\n    \r\n    distname = switch(input$dist,\r\n                      rnorm = \"Distribusi populasi: Normal\",\r\n                      rlnorm = \"Distribusi populasi: Condong ke kanan\",\r\n                      rbeta = \"Distribusi populasi: Condong ke kiri\",\r\n                      runif = \"Distribusi populasi: Seragam\")\r\n    \r\n    pop = parent()\r\n    \r\n    m_pop =  round(mean(pop), 2)\r\n    sd_pop = round(sd(pop), 2)\r\n    \r\n    pop = tibble(samples = pop)\r\n    pdens = density(pop$samples)\r\n    \r\n    x_range = max(pop$samples) - min(pop$samples)\r\n    y_pos = max(pdens$y) - 0.2*max(pdens$y)\r\n    \r\n    if (input$dist == \"rnorm\"){\r\n      \r\n      req(input$mu)\r\n      mu = input$mu\r\n      \r\n      x_pos = ifelse(mu > 0, min(-100, min(pop$samples)) + 20,\r\n                     max(100, max(pop$samples)) - 20)\r\n      \r\n      ggplot(data = pop, aes(x = samples, y = after_stat(density))) + \r\n        geom_histogram(bins = 45, color = \"white\") +\r\n        # geom_density() + draws a weird baseline. using stat_density() instead.\r\n        stat_density(geom = \"line\", size = 2) +\r\n        scale_x_continuous(limits = c(min(-100, pop$samples), max(100, pop$samples))) +\r\n        labs(title = distname, x = \"x\") +\r\n        annotate(\"text\", x = x_pos, y = y_pos,\r\n                 label = paste(\"rerata x\", \"=\", bquote(.(m_pop)),\r\n                               \"\\n\", \"simpangan baku x\", \"=\", bquote(.(sd_pop))),\r\n                 color = \"black\", size = 5) +\r\n        theme_bw(base_size = 19) + # better than doing title sizes inside theme().\r\n        theme(plot.title = element_text(hjust = 0.5))\r\n      \r\n    } else if (input$dist == \"runif\"){\r\n      \r\n      if (u_min() == u_max()){\r\n        \"  \" # this is to temporarily prevent graph from displaying while \r\n        # observeEvent is fixing the range.\r\n      } else {\r\n        \r\n        x_pos = max(pop$samples) - 0.1*x_range\r\n        \r\n        ggplot(data = pop, aes(x = samples, y = ..density..)) +\r\n          geom_histogram(bins = 45, color = \"white\") +\r\n          stat_density(geom = \"line\", size = 2) +\r\n          scale_y_continuous(expand = expand_scale(mult = c(0, .3))) +\r\n          labs(title = distname, x = \"x\") +\r\n          annotate(\"text\", x = x_pos, y = y_pos + 0.5*max(pdens$y),\r\n                   label = paste(\"rerata x\", \"=\", bquote(.(m_pop)),\r\n                                 \"\\n\", \"simpangan baku x\", \"=\", bquote(.(sd_pop))),\r\n                   color = \"black\", size = 5) +\r\n          theme_bw(base_size = 19) +\r\n          theme(plot.title = element_text(hjust = 0.5))}\r\n      \r\n    } else if (input$dist == \"rlnorm\"){\r\n      \r\n      x_pos = max(pop$samples) - 0.1*x_range\r\n      \r\n      ggplot(data = pop, aes(x = samples, y = ..density..)) + \r\n        geom_histogram(bins = 45, color = \"white\") +\r\n        stat_density(geom = \"line\", size = 2) +\r\n        labs(title = distname, x = \"x\") +\r\n        annotate(\"text\", x = x_pos, y = y_pos,\r\n                 label = paste(\"rerata x\", \"=\", bquote(.(m_pop)), \r\n                               \"\\n\", \"simpangan baku x\", \"=\", bquote(.(sd_pop))),\r\n                 color = \"black\", size = 5) +\r\n        theme_bw(base_size = 19) +\r\n        theme(plot.title = element_text(hjust = 0.5),\r\n              panel.grid.major = element_blank(),\r\n              panel.grid.minor = element_blank())\r\n      \r\n    } else if (input$dist == \"rbeta\"){\r\n      \r\n      x_pos = min(pop$samples) + 0.1*x_range\r\n      \r\n      ggplot(data = pop, aes(x = samples, y = ..density..)) + \r\n        geom_histogram(bins = 45, color = \"white\") +\r\n        stat_density(geom = \"line\", size = 2) +\r\n        labs(title = distname, x = \"x\") +\r\n        annotate(\"text\", x = x_pos, y = y_pos, \r\n                 label = paste(\"rerata x\", \"=\", bquote(.(m_pop)), \r\n                               \"\\n\", \"simpangan baku x\", \"=\", bquote(.(sd_pop))),\r\n                 color = \"black\", size = 5) +\r\n        theme_bw(base_size = 19) +\r\n        theme(plot.title = element_text(hjust = 0.5))\r\n      \r\n    }\r\n  })\r\n  \r\n  # plot 1 b) ----\r\n  # Ini adalah plot populasi di tab ketiga\r\n  \r\n  output$pop.dist.two = renderPlot({\r\n    \r\n    distname = switch(input$dist,\r\n                      rnorm = \"Population distribution: Normal\",\r\n                      rlnorm = \"Population distribution: Right skewed\",\r\n                      rbeta = \"Population distribution: Left skewed\",\r\n                      runif = \"Population distribution: Uniform\")\r\n    \r\n    pop = parent()\r\n    \r\n    m_pop =  round(mean(pop),2)\r\n    sd_pop = round(sd(pop),2)\r\n    \r\n    pop = tibble(samples = pop)\r\n    pdens = density(pop$samples)\r\n    \r\n    x_range = max(pop$samples) - min(pop$samples)\r\n    y_pos = max(pdens$y) - 0.2*max(pdens$y)\r\n    \r\n    if (input$dist == \"rnorm\"){\r\n      \r\n      req(input$mu)\r\n      mu = input$mu\r\n      \r\n      x_pos = ifelse(mu > 0, min(-100, min(pop$samples)) + 27,\r\n                     max(100, max(pop$samples)) - 27)\r\n      \r\n      ggplot(data = pop, aes(x = samples, y = after_stat(density))) + \r\n        geom_histogram(bins = 45, color = \"white\") +\r\n        stat_density(geom=\"line\", size = 1) +\r\n        scale_x_continuous(limits = c(min(-100, pop$samples), max(100, pop$samples))) +\r\n        labs(title = distname, x = \"x\") +\r\n        annotate(\"text\", x = x_pos, y = y_pos,\r\n                 label = paste(\"rerata x\", \"=\", bquote(.(m_pop)),\r\n                               \"\\n\", \"simpangan baku x\", \"=\", bquote(.(sd_pop))),\r\n                 color = \"black\", size = 3) +\r\n        theme_light(base_size = 10) +\r\n        theme(plot.title = element_text(hjust = 0.5))\r\n      \r\n    } else if (input$dist == \"runif\"){\r\n      \r\n      if (u_min() == u_max()){\r\n        \" \"\r\n      } else {\r\n        \r\n        x_pos = max(pop$samples) - 0.1*x_range\r\n        \r\n        ggplot(data = pop, aes(x = samples, y = after_stat(density))) +\r\n          geom_histogram(bins = 45, color = \"white\") +\r\n          stat_density(geom = \"line\", size = 1) +\r\n          scale_y_continuous(expand = expand_scale(mult = c(0, .3))) +\r\n          labs(title = distname, x = \"x\") +\r\n          annotate(\"text\", x = x_pos, y = y_pos + 0.5*max(pdens$y),\r\n                   label = paste(\"rerata x\", \"=\", bquote(.(m_pop)),\r\n                                 \"\\n\", \"simpangan baku x\", \"=\", bquote(.(sd_pop))),\r\n                   color = \"black\", size = 3) +\r\n          theme_light(base_size = 10) +\r\n          theme(plot.title = element_text(hjust = 0.5))}\r\n      \r\n    } else if (input$dist == \"rlnorm\"){\r\n      \r\n      x_pos = max(pop$samples) - 0.1*x_range\r\n      \r\n      ggplot(data = pop, aes(x = samples, y = after_stat(density))) + \r\n        geom_histogram(bins = 45, color = \"white\") +\r\n        stat_density(geom = \"line\", size = 1) +\r\n        labs(title = distname, x = \"x\") +\r\n        annotate(\"text\", x = x_pos, y = y_pos,\r\n                 label = paste(\"rerata x\", \"=\", bquote(.(m_pop)), \r\n                               \"\\n\", \"simpangan baku x\", \"=\", bquote(.(sd_pop))),\r\n                 color = \"black\", size = 3) +\r\n        theme_light(base_size = 10) +\r\n        theme(plot.title = element_text(hjust = 0.5))\r\n      \r\n    } else if (input$dist == \"rbeta\"){\r\n      \r\n      x_pos = min(pop$samples) + 0.1*x_range\r\n      \r\n      ggplot(data = pop, aes(x = samples, y = after_stat(density))) + \r\n        geom_histogram(bins = 45, color = \"white\") +\r\n        stat_density(geom = \"line\", size = 1) +\r\n        labs(title = distname, x = \"x\") +\r\n        annotate(\"text\", x = x_pos, y = y_pos, \r\n                 label = paste(\"rerata x\", \"=\", bquote(.(m_pop)), \r\n                               \"\\n\", \"simpangan baku x\", \"=\",\r\n                               bquote(.(sd_pop))),\r\n                 color = \"black\", size = 3) +\r\n        theme_light(base_size = 10) +\r\n        theme(plot.title = element_text(hjust = 0.5))\r\n      \r\n    }\r\n  })\r\n  \r\n  # plot 2 ----\r\n  # Ini adalah plot sampel-sampel\r\n  output$sample.dist = renderPlot({\r\n    \r\n    y = samples()\r\n    x = samples() %>% as_tibble()\r\n    \r\n    plots = list(rep(NA, 8))\r\n    \r\n    for(i in 1:8){\r\n      \r\n      mean = round(mean(y[,i]), 2)\r\n      sd = round(sd(y[,i]), 2)\r\n      \r\n      x_range = max(y[,i]) - min(y[,i])\r\n      pdens = density(y[,i])\r\n      \r\n      x_pos = ifelse(input$dist == \"rbeta\", min(y[,i]) + 0.1*x_range, \r\n                     max(y[,i]) - 0.1*x_range)\r\n      \r\n      plots[[i]] = ggplot(x, aes_string(x = paste0(\"V\", i))) +\r\n        geom_dotplot(alpha = 0.8, dotsize = 0.7,\r\n                     fill = \"#1b9e77\", color = \"#1b9e77\") +\r\n        geom_segment(aes(x = mean(y[,i]), y = 0,\r\n                         xend = mean(y[,i]), yend = Inf),\r\n                     color = \"#d95f02\", alpha = .6) +\r\n        labs(title = paste(\"Sampel ke-\", i, sep = \"\"), x = \"\", y = \"\") +\r\n        theme_bw(base_size = 13) +\r\n        annotate(\"text\", x = x_pos, y = 1.8,\r\n                 label = paste(\"x_bar\", \"=\", bquote(.(mean)),\r\n                               \"\\n\", \"SD\", \"=\", bquote(.(sd))),\r\n                 color = \"black\", size = 3) +\r\n        scale_y_continuous(limits = c(0,2), breaks = NULL) +\r\n        theme(plot.title = element_text(hjust = 0.5),\r\n              panel.grid.major = element_blank(),\r\n              panel.grid.minor = element_blank())\r\n    }\r\n    \r\n    grid.arrange(plots[[1]], plots[[2]], plots[[3]], plots[[4]], plots[[5]],\r\n                 plots[[6]], plots[[7]], plots[[8]], ncol = 4)\r\n  })\r\n  \r\n  \r\n  \r\n  # text for sample plots ----\r\n  output$num.samples = renderText({\r\n    \r\n    k = input$k\r\n    paste0(\"... dan seterusnya sampai sampel ke-\",k,\".\")\r\n    \r\n  })\r\n  \r\n  # plot 3 ----\r\n  # Ini adalah plot distribusi sampling\r\n  output$sampling.dist = renderPlot({\r\n    \r\n    distname = switch(input$dist,\r\n                      rnorm = \"populasi normal\",\r\n                      rlnorm  = \"populasi condong ke kanan\",\r\n                      rbeta = \"populasi condong ke kiri\",\r\n                      runif = \"populasi seragam\")\r\n    \r\n    n = input$n\r\n    k = input$k\r\n    \r\n    pop = parent()\r\n    \r\n    m_pop =  round(mean(pop),2)\r\n    sd_pop = round(sd(pop),2)\r\n    \r\n    ndist = tibble(means = colMeans(samples()))\r\n    \r\n    m_samp =  round(mean(ndist$means),2)\r\n    sd_samp = round(sd(ndist$means),2)\r\n    \r\n    ndens = density(ndist$means)\r\n    nhist = hist(ndist$means, plot=FALSE)\r\n    \r\n    x_range = max(ndist$means) - min(ndist$means)\r\n    \r\n    y_pos = max(ndens$y) - 0.1*max(ndens$y)\r\n    x_pos = ifelse(m_samp > 0, min(ndist$means) + 0.1*x_range, \r\n                   max(ndist$means) - 0.1*x_range)\r\n    \r\n    p = ggplot(data = ndist, aes(x = means, y = after_stat(density))) +\r\n      geom_histogram(bins = 20, color = \"white\", fill = \"#d95f02\",\r\n                     alpha = .6) +\r\n      stat_density(geom = \"line\", size = 2) +\r\n      labs(title = paste(\"Distribusi Sampling*\"),\r\n           x = \"Rerata sampel\",\r\n           y = \"\") +\r\n      annotate(\"text\", x = x_pos, y = y_pos,\r\n               label = paste(\"rerata x_bar\", \"=\", bquote(.(m_samp)),\r\n                             \"\\n\", \"simpangan baku x_bar\", \"=\", bquote(.(sd_samp))),\r\n               color = \"black\", size = 5) +\r\n      theme_bw(base_size = 19) +\r\n      theme(plot.title = element_text(hjust = 0.5))\r\n    \r\n    if (input$dist == \"runif\"){\r\n      \r\n      if (u_min() == u_max()){\r\n        \" \"\r\n      } else {\r\n        p\r\n      }\r\n    } else {\r\n      p\r\n    }\r\n  })\r\n  \r\n  # deskripsi plot distribusi sampling ----\r\n  output$sampling.descr = renderText({\r\n    \r\n    distname = switch(input$dist,\r\n                      rnorm = \"populasi normal\",\r\n                      rlnorm  = \"populasi condong ke kanan\",\r\n                      rbeta = \"populasi condong ke kiri\",\r\n                      runif = \"populasi seragam\")\r\n    \r\n    k = input$k\r\n    n = input$n\r\n    paste(\"*Distribusi rerata dari\", k, \"sampel acak,\r\n          masing-masing memuat\", n, \" observasi\r\n          dari sebuah\", distname)\r\n  })\r\n  \r\n  # deskripsi CLT ----\r\n  output$CLT.descr = renderText({\r\n    \r\n    pop = parent()\r\n    m_pop =  round(mean(pop),2)\r\n    s_pop = round(sd(pop),2)\r\n    \r\n    n = input$n\r\n    se=round(s_pop/sqrt(n),2)\r\n    paste0(\"Berdasarkan Teorema Limit Pusat (TLP), distribusi rerata sampel (distribusi sampling) berdistribusi mendekati normal. Rerata distribusi sampling tersebut kurang lebih sama dengan rerata populanya (\", m_pop, \" dan pias galatnya (simpangan baku rerata) kurang lebih sama dengan simpangan baku populasi dibagi dengan akar kuadrat ukuran sampel (\", s_pop,\r\n           \"/sqrt(\",n, \") = \", se,\"). Histogram di atas menunjukkan distribusi sampling reratanya. Sebagai perbandingan, distribusi populasinya disajikan di sebelah kanan.\")\r\n  })\r\n}\r\n# Membuat objek aplikasi Shiny ---------------------------------------\r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
